"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chalk = require("chalk");
var pluralize = require("pluralize");
var inlinetable_1 = require("./inlinetable");
var deps_1 = require("../deps");
exports.render = function (depMap, cliOpts) {
    /*
     * Filter packages to only the ones where versions mismatch
     */
    var filteredMatching = {
        deps: filterMatchingDependencies(depMap.deps),
        devDeps: filterMatchingDependencies(depMap.devDeps)
    };
    var filteredUnlocked = {
        deps: filterLockedDependencies(depMap.deps),
        devDeps: filterLockedDependencies(depMap.devDeps)
    };
    /*
     * Do we have any mismatches or unlocked?
     */
    var hasMismatches = filteredMatching.deps.length > 0
        || filteredMatching.devDeps.length > 0;
    var hasUnlocked = filteredUnlocked.deps.length > 0
        || filteredUnlocked.devDeps.length > 0;
    /*
     * We have no mismatching packages, so lets
     * render the table and a nice message
     */
    if (!cliOpts.strict && !hasMismatches) {
        sendSuccessResponse(depMap, ' NPM Vet: No mismatched package versions ');
    }
    /*
     * If we're in strict mode, and nothing is unlocked,
     * then render the table and a nice message.
     */
    if (cliOpts.strict && !hasUnlocked) {
        sendSuccessResponse(depMap, ' NPM Vet: No unlocked packages or mismatched package versions ');
    }
    /*
     * Whenever we get here, we either have no
     * some mismatches or some unlocked packages
     * in strict mode.
     */
    var mismatchingLength = filteredMatching.deps.length + filteredMatching.devDeps.length;
    var unlockedLength = filteredUnlocked.deps.length + filteredUnlocked.devDeps.length;
    var phrase = mismatchingLength > 1
        ? pluralize('package')
        : 'package';
    /*
     * Render an error message and a table with only
     * the mismatching verisons shown if any mismatches
     * are there.
     */
    if (mismatchingLength > 0) {
        sendErrorResponse(filteredMatching, " NPM Vet: You have " + mismatchingLength + " " + phrase + " "
            + "with mismatched versions ");
    }
    /*
     * We must be in strict mode with some unlocked
     * packages, lets fail.
     */
    sendErrorResponse(filteredUnlocked, " NPM Vet: You have " + unlockedLength + " " + phrase + " "
        + "that are currently unlocked versions ");
};
/**
 * @param  {IPackageDescriptorMap} depMap
 * @param  {string} message
 */
var sendSuccessResponse = function (depMap, message) {
    console.log(chalk.bold.bgGreen(message));
    inlinetable_1.render(depMap);
    process.exit(0);
};
/**
 * @param  {IPackageDescriptorMap} filteredMatching
 * @param  {string} message
 */
var sendErrorResponse = function (filteredMatching, message) {
    console.log(chalk.bold.bgRed(message));
    inlinetable_1.render(filteredMatching);
    process.exit(1);
};
/**
 * @param  {IPackageDescriptor[]} deps
 * @returns IPackageDescriptor
 */
var filterMatchingDependencies = function (deps) {
    return deps.filter(function (d) { return !deps_1.isMatchingVersion(d.parsedDefinedVersion, d.installedVersion); });
};
/**
 * @param  {IPackageDescriptor[]} deps
 * @returns IPackageDescriptor
 */
var filterLockedDependencies = function (deps) {
    return deps.filter(function (d) { return !d.locked; });
};
