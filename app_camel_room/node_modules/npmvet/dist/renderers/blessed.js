"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var blessed = require("blessed");
var lodash_1 = require("lodash");
var deps_1 = require("../deps");
/**
 * @param  {IPackageDescriptorMap} depMap
 */
exports.render = function (depMap) {
    var screen = blessed.screen({
        smartCSR: true,
        title: 'NPM Vet'
    });
    /*
     * Setup the table
     */
    var table = blessed.listtable({
        parent: screen,
        name: 'npmvet table',
        tags: true,
        vi: false,
        left: 0,
        border: 'line',
        align: 'center',
        width: '100%',
        height: '100%',
        style: {
            header: {
                bg: 'blue'
            },
            cell: {
                bg: 'black',
                fg: 'white',
                width: '100%',
                height: '100%'
            }
        }
    });
    /*
     * Setup the table rows
     */
    var rows = [[
            'Name',
            'Package Version',
            'Installed Version',
            'Status',
            'Locked'
        ]];
    rows = lodash_1.concat(rows, createRows(depMap.deps), createRows(depMap.devDeps));
    /*
     * Set the table data, append the table to the screen
     * and focus on the table
     */
    table.setData(rows);
    screen.append(table);
    table.focus();
    /*
     * Allow for quitting on the screen, and then render!
     */
    screen.key(['escape', 'q', 'C-c'], function (ch, key) { return process.exit(0); });
    screen.render();
};
/**
 * @param  {IPackageDescriptor[]} pkgDescriptor
 * @returns string
 */
var createRows = function (pkgDescriptor) {
    return pkgDescriptor.map(function (pkg) { return ([
        pkg.name,
        pkg.parsedDefinedVersion,
        pkg.installedVersion,
        (!deps_1.isMatchingVersion(pkg.parsedDefinedVersion, pkg.installedVersion)
            ? '{red-bg} Mismatch {/red-bg}'
            : '{green-bg} Matching {/green-bg}'),
        (pkg.locked
            ? '{green-bg}  Locked  {/green-bg}'
            : '{red-bg} Unlocked {/red-bg}')
    ]); });
};
